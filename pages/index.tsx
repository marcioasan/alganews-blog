import { ServerResponse } from 'http';
import { Post, PostService } from 'marcioasan-sdk'
import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'

import ReactPaginate from 'react-paginate';
import FeaturedPost from '../components/FeaturedPost'
import PageGrid from '../components/PageGrid';
import PostCard from '../components/PostCard';
import PostsGrid from '../components/PostsGrid';
import Router from "next/router"
interface HomeProps {
  posts?: Post.Paginated;
}

export default function Home(props: HomeProps) {
  const { posts } = props;
  return (
    <PageGrid>
      <Head>
        <title>Alganews</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {posts?.content && <FeaturedPost postSummary={posts?.content[0]}/>}
      
      <PostsGrid>
        {//11.25. Listando os posts - 2'20"
        posts?.content?.slice(1).map((post) => {
              return <PostCard key={post.id} post={post} />
            })
          }
      </PostsGrid>
      
      <ReactPaginate 
        containerClassName={"Pagination"}
        //11.29. React Paginate com SSR
        pageCount={posts?.totalPages || 0}
        marginPagesDisplayed={0}
        pageRangeDisplayed={3}
        previousLabel={"<"}
        nextLabel={">"}
        hrefBuilder={(page) => `/?page=${page}`}
        onPageChange={(page) => {
          Router.push(`/?page=${page.selected + 1}`);
        }}      
      />
    </PageGrid>
  )
}

//11.24. Validando parâmetros - 12'
function sendToHomePage(res: ServerResponse){
  res.statusCode = 302;
  res.setHeader('Location', '/?page=1');
  return { props: {} };
}


//11.23. Recuperando parâmetros da Query String
export const getServerSideProps: GetServerSideProps<HomeProps> = async (
  //11.24. Validando parâmetros - 13'30"
  { query, res }
  ) => {
  const { page: _page } = query;
  const page = Number(_page)

  //11.24. Validando parâmetros - 4'
  if(isNaN(page) || page < 1){
    return sendToHomePage(res);
  }

  const posts = await PostService.getAllPosts({ page: Number(page) - 1 });

  if(!posts.content?.length){
    return sendToHomePage(res);
  }

  return {
    props: {
      posts,
    },
  };
};



//11.22. getServerSideProps vs useEffect
// export async function getServerSideProps() {
//   const posts = await PostService.getAllPosts({ page: 0 });
//   return {
//     props: {
//       posts,
//     },
//   };
// }